{"version":3,"sources":["components/AddItemButton/AddItemButton.js","components/Header/Header.js","components/ItemBody/ItemBody.js","components/OnEditItemBody/OnEditItemBody.js","store/actions/actions.js","store/constans/constants.js","components/Item/Item.js","components/ContainerForItems/ContainerForItems.js","components/Modal/Modal.js","App.js","store/reducers/reducer.js","store/reducers/rootReducer.js","store/index.js","serviceWorker.js","index.js","components/OnEditItemBody/OnEditItemBody.module.css","components/Header/Header.module.css","components/ItemBody/ItemBody.module.css","components/AddItemButton/AddItemButton.module.css","components/ContainerForItems/ContainerForItems.module.css","components/Item/Item.module.css","components/Modal/Modal.module.css"],"names":["AddItemButton","toggleModalHandler","onClick","className","styles","button","Header","header","wrapper","logo","ItemBody","id","image","name","title","description","onEditToggleHandler","item","alt","width","height","src","renderField","input","label","type","meta","touched","error","inputs","idField","OnEditItemBody","handleSubmit","deleteItem","body","onSubmit","formBody","Field","component","onDeleteBtnHandler","reduxForm","form","enableReinitialize","connect","state","props","initialValues","dispatch","payload","editItem","useState","isEditing","setIsEditing","values","ContainerForItems","itemElemens","items","map","key","inner","fields","labels","inputsError","Modal","outer","modalBody","buttons","validate","names","errors","usedNames","alreadyExistingName","push","findAndPushUsedNames","includes","length","reducer","dataItems","addItem","Date","now","addItemToStore","isModalShowing","setIsModalShowing","initialState","rootReducer","combineReducers","action","filter","formReducer","loggerMiddleware","createLogger","middleware","applyMiddleware","thunk","store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.e7bd56eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"../AddItemButton/AddItemButton.module.css\";\r\n\r\nconst AddItemButton = ({ toggleModalHandler }) => {\r\n  return (\r\n    <div onClick={toggleModalHandler} className={styles.button}>\r\n      <span>Add New Item</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItemButton;\r\n","import React from \"react\";\r\nimport styles from \"../Header/Header.module.css\";\r\nimport AddItemButton from \"../AddItemButton/AddItemButton\";\r\n\r\nconst Header = ({ toggleModalHandler }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.wrapper}>\r\n        <span className={styles.logo}>Logo</span>\r\n        <AddItemButton toggleModalHandler={toggleModalHandler} />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"../ItemBody/ItemBody.module.css\";\r\n\r\nconst ItemBody = ({\r\n  id,\r\n  image,\r\n  name,\r\n  title,\r\n  description,\r\n  onEditToggleHandler,\r\n}) => {\r\n  return (\r\n    <div id={id} className={styles.item}>\r\n      <img alt=\"Item\" width=\"250\" height=\"250\" src={image} />\r\n      <h2>{name}</h2>\r\n      <p>{title}</p>\r\n      <p className={styles.description}>{description}</p>\r\n      <button onClick={onEditToggleHandler} className={styles.button}>\r\n        EDIT\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemBody;\r\n","import React from \"react\";\r\nimport styles from \"../OnEditItemBody/OnEditItemBody.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteItem } from \"../../store/actions/actions\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input className={styles.inputs} {...input} type={type} />\r\n      {touched && error && <p>{error}</p>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst idField = ({ input, type }) => (\r\n  <div>\r\n    <input className={styles.idField} {...input} type={type} />\r\n  </div>\r\n);\r\n\r\nlet OnEditItemBody = ({ handleSubmit, id, deleteItem, image }) => {\r\n  const onDeleteBtnHandler = (id) => {\r\n    deleteItem(id);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <form onSubmit={handleSubmit}>\r\n        <img alt=\"Item\" width=\"250\" height=\"250\" src={image} />\r\n        <div className={styles.formBody}>\r\n          <Field\r\n            label=\"Image URL\"\r\n            name=\"image\"\r\n            component={renderField}\r\n            type=\"text\"\r\n          />\r\n          <Field label=\"Name\" name=\"name\" component={renderField} type=\"text\" />\r\n          <Field\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            component={renderField}\r\n            type=\"text\"\r\n          />\r\n          <Field\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            component={renderField}\r\n            type=\"text\"\r\n          />\r\n          <Field name=\"id\" component={idField} />\r\n          <button type=\"submit\">SAVE</button>\r\n          <button onClick={() => onDeleteBtnHandler(id)}>DELETE</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nOnEditItemBody = reduxForm({\r\n  form: \"editForm\",\r\n  enableReinitialize: true,\r\n})(OnEditItemBody);\r\n\r\nOnEditItemBody = connect((state, props) => ({\r\n  initialValues: {\r\n    name: props.name,\r\n    id: props.id,\r\n    title: props.title,\r\n    image: props.image,\r\n    description: props.description,\r\n  },\r\n}))(OnEditItemBody);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteItem: (payload) => dispatch(deleteItem(payload)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(OnEditItemBody);\r\n","import {\r\n  ADD_ITEM_TO_STORE,\r\n  EDIT_ITEM,\r\n  DELETE_ITEM,\r\n} from \"../constans/constants\";\r\n\r\nconst generateId = () => {\r\n  return Date.now();\r\n};\r\n\r\nexport const addItemToStore = (payload) => ({\r\n  type: ADD_ITEM_TO_STORE,\r\n  payload: { ...payload, id: generateId() },\r\n});\r\n\r\nexport const editItem = (payload) => ({\r\n  type: EDIT_ITEM,\r\n  payload,\r\n});\r\n\r\nexport const deleteItem = (payload) => ({\r\n  type: DELETE_ITEM,\r\n  payload,\r\n});\r\n","export const ADD_ITEM_TO_STORE = \"ADD_ITEM_TO_STORE\";\r\nexport const EDIT_ITEM = \"EDIT_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\n","import React, { useState } from \"react\";\r\nimport styles from \"../Item/Item.module.css\";\r\nimport ItemBody from \"../ItemBody/ItemBody\";\r\nimport OnEditItemBody from \"../OnEditItemBody/OnEditItemBody\";\r\nimport { connect } from \"react-redux\";\r\nimport { editItem } from \"../../store/actions/actions\";\r\n\r\nconst Item = ({ editItem, ...props }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const onEditToggleHandler = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const submitEditData = (values) => {\r\n    editItem(values);\r\n    onEditToggleHandler();\r\n  };\r\n  return (\r\n    <div className={styles.item}>\r\n      {isEditing ? (\r\n        <OnEditItemBody onSubmit={submitEditData} {...props} />\r\n      ) : (\r\n        <ItemBody onEditToggleHandler={onEditToggleHandler} {...props} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  editItem: (payload) => dispatch(editItem(payload)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Item);\r\n","import React from \"react\";\r\nimport styles from \"../ContainerForItems/ContainerForItems.module.css\";\r\nimport Item from \"../Item/Item\";\r\n\r\nconst ContainerForItems = ({ items }) => {\r\n  const itemElemens = items.map((item) => (\r\n    <Item\r\n      key={item.id}\r\n      id={item.id}\r\n      name={item.name}\r\n      image={item.image}\r\n      title={item.title}\r\n      description={item.description}\r\n    />\r\n  ));\r\n  return (\r\n    <section>\r\n      <div className={styles.inner}>{itemElemens}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContainerForItems;\r\n","import React from \"react\";\r\nimport styles from \"../Modal/Modal.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div className={styles.fields}>\r\n    <label className={styles.labels}>{label}</label>\r\n    <div>\r\n      {touched && error ? (\r\n        <div>\r\n          <input className={styles.inputsError} {...input} type={type} />\r\n          <p className={styles.error}>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <input className={styles.inputs} {...input} type={type} />\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst validate = ({ name, title, description, image }, props) => {\r\n  let names = [];\r\n  const errors = {};\r\n  const findAndPushUsedNames = () => {\r\n    for (let item of props.usedNames) {\r\n      const alreadyExistingName = item[\"name\"];\r\n      names.push(alreadyExistingName);\r\n    }\r\n  };\r\n  findAndPushUsedNames();\r\n  if (!name) {\r\n    errors.name = \"All fields are required\";\r\n  } else if (names.includes(name)) {\r\n    errors.name = `'${name}' is already exist`;\r\n  } else if (name.length > 20) {\r\n    errors.name = \"Enter 20 characters or less\";\r\n  }\r\n  if (!description) {\r\n    errors.description = \" \";\r\n  } else if (description.length > 100) {\r\n    errors.description = \"Enter 100 characters or less\";\r\n  }\r\n  if (!image) {\r\n    errors.image = \" \";\r\n  }\r\n  if (!title) {\r\n    errors.title = \" \";\r\n  }\r\n  return errors;\r\n};\r\n\r\nlet Modal = ({ handleSubmit, toggleModalHandler }) => {\r\n  return (\r\n    <div className={styles.outer}>\r\n      <div className={styles.modalBody}>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <Field label=\"Name\" name=\"name\" component={renderField} type=\"text\" />\r\n          <Field\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            component={renderField}\r\n            type=\"text\"\r\n          />\r\n          <Field\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            component={renderField}\r\n            type=\"text\"\r\n          />\r\n          <Field\r\n            label=\"Image URL\"\r\n            name=\"image\"\r\n            component={renderField}\r\n            type=\"text\"\r\n          />\r\n          <div className={styles.buttons}>\r\n            <button className={styles.button} type=\"submit\">\r\n              Add\r\n            </button>\r\n            <button onClick={toggleModalHandler} className={styles.button}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal = reduxForm({\r\n  form: \"item_form\",\r\n  validate,\r\n})(Modal);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  usedNames: state.reducer.items,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Modal);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport ContainerForItems from \"./components/ContainerForItems/ContainerForItems\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToStore } from \"./store/actions/actions\";\r\n\r\nconst App = ({ addItem, dataItems }) => {\r\n  const [isModalShowing, setIsModalShowing] = useState(false);\r\n\r\n  const toggleModalHandler = () => {\r\n    setIsModalShowing(!isModalShowing);\r\n  };\r\n\r\n  const addNewItem = (values) => {\r\n    addItem(values);\r\n    toggleModalHandler();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header toggleModalHandler={toggleModalHandler} />\r\n      {isModalShowing ? (\r\n        <Modal toggleModalHandler={toggleModalHandler} onSubmit={addNewItem} />\r\n      ) : null}\r\n      <ContainerForItems items={dataItems} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dataItems: state.reducer.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (payload) => dispatch(addItemToStore(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  ADD_ITEM_TO_STORE,\r\n  EDIT_ITEM,\r\n  DELETE_ITEM,\r\n} from \"../constans/constants\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ITEM_TO_STORE: {\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload],\r\n      };\r\n    }\r\n    case EDIT_ITEM: {\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item) =>\r\n          item.id === action.payload.id\r\n            ? {\r\n                ...item,\r\n                name: action.payload.name,\r\n                title: action.payload.title,\r\n                image: action.payload.image,\r\n                description: action.payload.description,\r\n              }\r\n            : item\r\n        ),\r\n      };\r\n    }\r\n    case DELETE_ITEM: {\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.id !== action.payload),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst rootReducer = combineReducers({\r\n  reducer,\r\n  form: formReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst loggerMiddleware = createLogger();\r\nconst middleware = applyMiddleware(thunk, loggerMiddleware);\r\n\r\nexport const store = createStore(rootReducer, middleware);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/index\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"OnEditItemBody_body__1YC0U\",\"idField\":\"OnEditItemBody_idField__14UMK\",\"inputs\":\"OnEditItemBody_inputs__rQmxD\",\"formBody\":\"OnEditItemBody_formBody__1GsAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CNss\",\"wrapper\":\"Header_wrapper__1nhWG\",\"logo\":\"Header_logo__2jQmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemBody_item__147OF\",\"button\":\"ItemBody_button__1urBu\",\"description\":\"ItemBody_description__2oHUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddItemButton_button__2-Ibu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"ContainerForItems_inner__25C5i\",\"description\":\"ContainerForItems_description__1ta-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__19n8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"Modal_outer__1QCRj\",\"modalBody\":\"Modal_modalBody__1gI23\",\"button\":\"Modal_button__2wNC8\",\"inputs\":\"Modal_inputs__3orbj\",\"inputsError\":\"Modal_inputsError__m0mFi\",\"error\":\"Modal_error__3MnV_\",\"labels\":\"Modal_labels__2dfaP\",\"form\":\"Modal_form__2_2km\",\"fields\":\"Modal_fields__3mFNe\",\"buttons\":\"Modal_buttons__1xD_a\"};"],"sourceRoot":""}